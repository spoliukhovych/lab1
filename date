from datetime import datetime, timedelta
from calendar import monthrange, weekday


class Timee:
    def __init__(self, y=0, m=0, d=0, h=0, min=0, s=0):
        self.__y = y
        self.__m = m
        self.__d = d
        self.__h = h
        self.__min = min
        self.__s = s

        testVal = datetime(y, m, d, h, min, s)

    def printTime(self):
        y1 = self.__y
        m1 = self.__m
        d1 = self.__d
        h1 = self.__h
        min1 = self.__min
        s1 = self.__s
        if y1 / 9 <= 1:
            y1 = "0" + str(y1)
        if m1 / 9 <= 1:
            m1 = "0" + str(m1)
        if d1 / 9 <= 1:
            d1 = "0" + str(d1)
        if h1 / 9 <= 1:
            h1 = "0" + str(h1)
        if min1 / 9 <= 1:
            min1 = "0" + str(min1)
        if s1 / 9 <= 1:
            s1 = "0" + str(s1)
        print(f"{y1}.{m1}.{d1}, {h1}:{min1}:{s1}")

    def getDgts(self):
        return [self.__y, self.__m, self.__d, self.__h, self.__min, self.__s]

    def setDgts(self, y, m, d, h, min, s):
        self.__y = y
        self.__m = m
        self.__d = d
        self.__h = h
        self.__min = min
        self.__s = s


def daysBtw(d1, d2: Timee):
    l1 = d1.getDgts()
    l2 = d2.getDgts()

    y1 = l1[0]
    m1 = l1[1]
    ds1 = l1[2]
    h1 = l1[3]
    min1 = l1[4]
    s1 = l1[5]

    y2 = l2[0]
    m2 = l2[1]
    ds2 = l2[2]
    h2 = l2[3]
    min2 = l2[4]
    s2 = l2[5]

    dat1 = datetime(y1, m1, ds1, h1, min1, s1)
    dat2 = datetime(y2, m2, ds2, h2, min2, s2)

    dif = dat1 - dat2
    return dif.days

def secondsBtw(d1, d2: Timee):
    l1 = d1.getDgts()
    l2 = d2.getDgts()

    y1 = l1[0]
    m1 = l1[1]
    ds1 = l1[2]
    h1 = l1[3]
    min1 = l1[4]
    s1 = l1[5]

    y2 = l2[0]
    m2 = l2[1]
    ds2 = l2[2]
    h2 = l2[3]
    min2 = l2[4]
    s2 = l2[5]

    dat1 = datetime(y1, m1, ds1, h1, min1, s1)
    dat2 = datetime(y2, m2, ds2, h2, min2, s2)

    dif = dat1 - dat2
    addS = dif.days * 86400
    dif = dif.seconds + addS
    return dif

def minBtw(d1, d2: Timee):
    dif = secondsBtw(d1, d2)
    dif = dif / 60
    return round(dif)

def hrsBtw(d1, d2: Timee):
    dif = secondsBtw(d1, d2)
    dif = dif / 3600
    return round(dif)


def monthsBtw(d1, d2: Timee):
    l1 = d1.getDgts()
    l2 = d2.getDgts()

    y1 = l1[0]
    m1 = l1[1]
    ds1 = l1[2]
    h1 = l1[3]
    min1 = l1[4]
    s1 = l1[5]

    y2 = l2[0]
    m2 = l2[1]
    ds2 = l2[2]
    h2 = l2[3]
    min2 = l2[4]
    s2 = l2[5]

    dat1 = datetime(y1, m1, ds1, h1, min1, s1)
    dat2 = datetime(y2, m2, ds2, h2, min2, s2)

    delta = 0
    while True:
        mdays = monthrange(dat2.year, dat2.month)[1]
        dat2 += timedelta(days=mdays)
        if dat2 <= dat1:
            delta += 1
        else:
            break
    return delta


def yrsBtw(d1, d2: Timee):
    dif = monthsBtw(d1, d2)
    dif = dif / 12
    return round(dif)

def addDif(d1: Timee):
    x = int(input("Додати різницю в: 1)секундах, 2)хвилинах, 3)годинах, 4)днях, 5)місяцях, 6)роках"))
    dif = int(input("Скільки: "))

    if x == 1:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 += timedelta(seconds=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        #return d1
    elif x == 2:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 += timedelta(minutes=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 3:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 += timedelta(hours=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 4:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 += timedelta(days=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 5:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        for i in range(dif):
            dat1 += timedelta(days=30)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 6:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        for i in range(dif):
            dat1 += timedelta(days=365)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1

def minDif(d1: Timee):
    x = int(input("Відняти різницю в: 1)секундах, 2)хвилинах, 3)годинах, 4)днях, 5)місяцях, 6)роках"))
    dif = int(input("Скільки: "))

    if x == 1:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 -= timedelta(seconds=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        #return d1
    elif x == 2:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 -= timedelta(minutes=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 3:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 -= timedelta(hours=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 4:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        dat1 -= timedelta(days=dif)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 5:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        for i in range(dif):
            dat1 -= timedelta(days=30)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1
    elif x == 6:
        l1 = d1.getDgts()

        y1 = l1[0]
        m1 = l1[1]
        ds1 = l1[2]
        h1 = l1[3]
        min1 = l1[4]
        s1 = l1[5]

        dat1 = datetime(y1, m1, ds1, h1, min1, s1)
        for i in range(dif):
            dat1 -= timedelta(days=365)
        d1.setDgts(dat1.year, dat1.month, dat1.day, dat1.hour, dat1.minute, dat1.second)
        # return d1

def dOfTWeeek(d1: Timee):
    l1 = d1.getDgts()
    d = weekday(l1[0], l1[1], l1[2])
    if d == 0:
        return "Понеділок"
    elif d == 1:
        return "Вівторок"
    elif d == 2:
        return "Середа"
    elif d == 3:
        return "Четвер"
    elif d == 4:
        return "П'ятниця"
    elif d == 5:
        return "Субота"
    else:
        return "Неділя"

def nOfWeekInMnth(d1: Timee):
    l1 = d1.getDgts()
    mdays = l1[2] + (monthrange(l1[0], l1[1])[0])
    nweek = mdays / 7
    if nweek > 0 and nweek <= 1:
        return "1-й тиждень"
    elif nweek > 1 and nweek <= 2:
        return "2-й тиждень"
    elif nweek > 2 and nweek <= 3:
        return "3-й тиждень"
    elif nweek > 3 and nweek <= 4:
        return "4-й тиждень"
    elif nweek > 4 and nweek <= 5:
        return "5-й тиждень"
    else:
        return "6-й тиждень"

def nOfWeekInYr(d1: Timee):
    l = d1.getDgts()
    if l[1] == 1:
        return nOfWeekInMnth(d1)
    elif l[1] != 1:
        mdays = 0
        for i in range(l[1] - 1):
            mdays += monthrange(l[0], i + 1)[1]
        mdays += (l[2] + monthrange(l[0], 1)[0])
        nweek = round(mdays / 7)
        nweek = str(nweek) + "-й тиждень"
        return nweek

d1 = Timee(2022, 3, 10, 8, 45, 32)
d2 = Timee(2021, 10, 12, 8, 30, 20)

d1.printTime()
d2.printTime()

print(f"Кількість секунд між датами: {secondsBtw(d1, d2)}")
print(f"Кількість хвилин між датами: {minBtw(d1, d2)}")
print(f"Кількість годин між датами: {hrsBtw(d1, d2)}")
print(f"Кількість днів між датами: {daysBtw(d1, d2)}")
print(f"Кількість місяців між датами: {monthsBtw(d1, d2)}")
print(f"Кількість років між датами: {yrsBtw(d1, d2)}")

addDif(d1)
d1.printTime()
minDif(d1)
d1.printTime()

print(f"День тиждня: {dOfTWeeek(d1)}")
print(f"Номер тиждня в місяці: {nOfWeekInMnth(d1)}")
print(f"Номер тиждня в році: {nOfWeekInYr(d1)}")
